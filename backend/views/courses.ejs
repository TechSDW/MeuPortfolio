<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %></title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <style>
        body {
            background-color: #f8f9fa;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }
        .navbar-brand {
            font-weight: bold;
            color: #2563eb !important;
        }
        .card {
            border: none;
            box-shadow: 0 0.125rem 0.25rem rgba(0, 0, 0, 0.075);
            transition: transform 0.15s ease-in-out;
        }
        .card:hover {
            transform: translateY(-2px);
        }
        .btn-primary {
            background-color: #2563eb;
            border-color: #2563eb;
        }
        .btn-primary:hover {
            background-color: #1d4ed8;
            border-color: #1d4ed8;
        }
        .badge {
            font-size: 0.75em;
        }
        .footer {
            background-color: #343a40;
            color: white;
            margin-top: 3rem;
        }
        .page-header {
            background: linear-gradient(135deg, #2563eb, #1d4ed8);
            color: white;
            padding: 2rem 0;
            margin-bottom: 2rem;
        }
    </style>
</head>
<body>
    <!-- Navigation -->
    <nav class="navbar navbar-expand-lg navbar-light bg-white shadow-sm">
        <div class="container">
            <a class="navbar-brand" href="/">
                <i class="fas fa-user-graduate me-2"></i>
                Fábio Hiromitsu Nawa
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav">
                <span class="navbar-toggler-icon"></span>
            </button>
            <div class="collapse navbar-collapse" id="navbarNav">
                <ul class="navbar-nav ms-auto">
                    <li class="nav-item">
                        <a class="nav-link" href="/">Início</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link active" href="/courses">Cursos</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="/certifications">Certificações</a>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link" href="http://localhost:3001" target="_blank">Portfolio React</a>
                    </li>
                </ul>
            </div>
        </div>
    </nav>

    <!-- Page Header -->
    <section class="page-header">
        <div class="container text-center">
            <h1 class="display-5 fw-bold mb-3">
                <i class="fas fa-graduation-cap me-3"></i>
                <%= title %>
            </h1>
            <p class="lead">Cursos realizados e em andamento</p>
        </div>
    </section>

    <!-- Courses Grid -->
    <section class="container mb-5">
        <% if (courses && courses.length > 0) { %>
            <div class="row">
                <% courses.forEach(function(course) { %>
                    <div class="col-md-6 col-lg-4 mb-4">
                        <div class="card h-100">
                            <div class="card-body">
                                <div class="d-flex align-items-start mb-3">
                                    <div class="bg-primary text-white rounded p-2 me-3">
                                        <i class="fas fa-book"></i>
                                    </div>
                                    <div class="flex-grow-1">
                                        <h5 class="card-title mb-1"><%= course.title %></h5>
                                        <p class="text-muted mb-0"><%= course.issuer %></p>
                                    </div>
                                </div>
                                
                                <div class="mb-3">
                                    <span class="badge bg-primary"><%= course.category %></span>
                                    <span class="badge bg-secondary ms-2"><%= course.date %></span>
                                </div>
                                
                                <% if (course.description) { %>
                                    <p class="card-text"><%= course.description %></p>
                                <% } %>
                                
                                <div class="mt-auto">
                                    <small class="text-muted">
                                        <i class="fas fa-calendar me-1"></i>
                                        Criado em: <%= new Date(course.created_at).toLocaleDateString('pt-BR') %>
                                    </small>
                                </div>
                            </div>
                        </div>
                    </div>
                <% }); %>
            </div>
        <% } else { %>
            <div class="text-center py-5">
                <i class="fas fa-graduation-cap fa-3x text-muted mb-3"></i>
                <h3 class="text-muted">Nenhum curso encontrado</h3>
                <p class="text-muted">Os cursos serão exibidos aqui quando estiverem disponíveis.</p>
            </div>
        <% } %>
    </section>

    <!-- API Testing Section -->
    <section class="container mb-5">
        <div class="card">
            <div class="card-header bg-info text-white">
                <h4 class="mb-0">
                    <i class="fas fa-code me-2"></i>
                    Teste da API de Cursos
                </h4>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-md-6">
                        <h5>Adicionar Novo Curso</h5>
                        <form id="courseForm">
                            <div class="mb-3">
                                <label for="title" class="form-label">Título</label>
                                <input type="text" class="form-control" id="title" required>
                            </div>
                            <div class="mb-3">
                                <label for="issuer" class="form-label">Instituição</label>
                                <input type="text" class="form-control" id="issuer" required>
                            </div>
                            <div class="mb-3">
                                <label for="date" class="form-label">Data</label>
                                <input type="text" class="form-control" id="date" placeholder="Ex: Janeiro 2024" required>
                            </div>
                            <div class="mb-3">
                                <label for="category" class="form-label">Categoria</label>
                                <select class="form-select" id="category" required>
                                    <option value="">Selecione uma categoria</option>
                                    <option value="Programação">Programação</option>
                                    <option value="Web">Web</option>
                                    <option value="DevOps">DevOps</option>
                                    <option value="Dados">Dados</option>
                                    <option value="Segurança">Segurança</option>
                                    <option value="Metodologia">Metodologia</option>
                                </select>
                            </div>
                            <div class="mb-3">
                                <label for="description" class="form-label">Descrição</label>
                                <textarea class="form-control" id="description" rows="3"></textarea>
                            </div>
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-plus me-2"></i>
                                Adicionar Curso
                            </button>
                        </form>
                    </div>
                    <div class="col-md-6">
                        <h5>Operações da API</h5>
                        <div class="d-grid gap-2">
                            <button class="btn btn-outline-primary" onclick="loadCourses()">
                                <i class="fas fa-sync me-2"></i>
                                Recarregar Cursos
                            </button>
                            <button class="btn btn-outline-info" onclick="testAPI()">
                                <i class="fas fa-flask me-2"></i>
                                Testar API
                            </button>
                            <a href="/api/courses" class="btn btn-outline-success" target="_blank">
                                <i class="fas fa-external-link-alt me-2"></i>
                                Ver JSON da API
                            </a>
                        </div>
                        <div id="apiResult" class="mt-3"></div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <!-- Footer -->
    <footer class="footer py-4 mt-5">
        <div class="container text-center">
            <p class="mb-0">&copy; <%= new Date().getFullYear() %> Fábio Hiromitsu Nawa. Todos os direitos reservados.</p>
            <p class="mb-0 mt-2">
                <small>Desenvolvido com Node.js, Express, EJS e SQLite</small>
            </p>
        </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        // Form submission for adding new course
        document.getElementById('courseForm').addEventListener('submit', async function(e) {
            e.preventDefault();
            
            const formData = {
                title: document.getElementById('title').value,
                issuer: document.getElementById('issuer').value,
                date: document.getElementById('date').value,
                category: document.getElementById('category').value,
                description: document.getElementById('description').value
            };
            
            try {
                const response = await fetch('/api/courses', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(formData)
                });
                
                if (response.ok) {
                    alert('Curso adicionado com sucesso!');
                    location.reload();
                } else {
                    const error = await response.json();
                    alert('Erro: ' + error.error);
                }
            } catch (error) {
                alert('Erro ao adicionar curso: ' + error.message);
            }
        });
        
        // Load courses function
        async function loadCourses() {
            try {
                const response = await fetch('/api/courses');
                const courses = await response.json();
                document.getElementById('apiResult').innerHTML = 
                    '<div class="alert alert-success"><strong>API Response:</strong><br><pre>' + 
                    JSON.stringify(courses, null, 2) + '</pre></div>';
            } catch (error) {
                document.getElementById('apiResult').innerHTML = 
                    '<div class="alert alert-danger">Erro: ' + error.message + '</div>';
            }
        }
        
        // Test API function
        async function testAPI() {
            try {
                const response = await fetch('/api/courses');
                const data = await response.json();
                document.getElementById('apiResult').innerHTML = 
                    '<div class="alert alert-info"><strong>Teste da API:</strong><br>' +
                    'Status: ' + response.status + '<br>' +
                    'Cursos encontrados: ' + data.length + '</div>';
            } catch (error) {
                document.getElementById('apiResult').innerHTML = 
                    '<div class="alert alert-danger">Erro no teste: ' + error.message + '</div>';
            }
        }
    </script>
</body>
</html>
